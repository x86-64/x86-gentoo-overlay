--- src/html-url.c	2009-09-22 07:00:12.000000000 +0400
+++ src/html-url.c	2010-10-07 10:15:35.000000000 +0400
@@ -705,6 +716,50 @@
   return ctx.head;
 }
 
+struct urlpos *
+get_urls_html_memory (char *content, long length, const char *url, bool *meta_disallow_follow,
+               struct iri *iri)
+{
+  struct map_context ctx;
+  int flags;
+
+  ctx.text = content;
+  ctx.head = NULL;
+  ctx.base = NULL;
+  ctx.parent_base = url ? url : opt.base_href;
+  ctx.document_file = NULL;
+  ctx.nofollow = false;
+
+  if (!interesting_tags)
+    init_interesting ();
+
+  /* Specify MHT_TRIM_VALUES because of buggy HTML generators that
+     generate <a href=" foo"> instead of <a href="foo"> (browsers
+     ignore spaces as well.)  If you really mean space, use &32; or
+     %20.  MHT_TRIM_VALUES also causes squashing of embedded newlines,
+     e.g. in <img src="foo.[newline]html">.  Such newlines are also
+     ignored by IE and Mozilla and are presumably introduced by
+     writing HTML with editors that force word wrap.  */
+  flags = MHT_TRIM_VALUES;
+  if (opt.strict_comments)
+    flags |= MHT_STRICT_COMMENTS;
+
+  /* the NULL here used to be interesting_tags */
+  map_html_tags (content, length, collect_tags_mapper, &ctx, flags,
+                 NULL, interesting_attributes);
+
+  /* If meta charset isn't null, override content encoding */
+  if (iri && meta_charset)
+    set_content_encoding (iri, meta_charset);
+
+  if (meta_disallow_follow)
+    *meta_disallow_follow = ctx.nofollow;
+
+  xfree_null (ctx.base);
+  return ctx.head;
+}
+
+
 /* This doesn't really have anything to do with HTML, but it's similar
    to get_urls_html, so we put it here.  */
 
--- src/html-url.h	2009-09-21 20:03:06.000000000 +0400
+++ src/html-url.h	2010-10-02 14:51:14.000000000 +0400
@@ -45,6 +45,7 @@
 
 struct urlpos *get_urls_file (const char *);
 struct urlpos *get_urls_html (const char *, const char *, bool *, struct iri *);
+struct urlpos *get_urls_html_memory (char *, long, const char *, bool *, struct iri *);
 struct urlpos *append_url (const char *, int, int, struct map_context *);
 void free_urlpos (struct urlpos *);
 
